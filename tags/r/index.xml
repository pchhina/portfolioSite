<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Paramjot Singh</title>
    <link>https://pchhina.github.io/portfolioSite/tags/r/</link>
    <description>Recent content in R on Paramjot Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 05:04:40 -0600</lastBuildDate>
    
	<atom:link href="https://pchhina.github.io/portfolioSite/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building R package using command line options</title>
      <link>https://pchhina.github.io/portfolioSite/post/package_building/</link>
      <pubDate>Sat, 10 Feb 2018 05:04:40 -0600</pubDate>
      
      <guid>https://pchhina.github.io/portfolioSite/post/package_building/</guid>
      <description>This post describes the process of building an R package without using RStudio. This will come in handy for anyone who is using vim (and of course Nvim-R!) as a code editor for their development work. Alright, let&amp;rsquo;s get moving. We are going to create a small package offering a new ggplot theme to demonstrate the process.
Step 0: Install the required packages install.packages(c(&amp;#34;devtools&amp;#34;, &amp;#34;roxygen2&amp;#34;, &amp;#34;testthat&amp;#34;, &amp;#34;knitr&amp;#34;)) library(devtools) has_devel() The command has_devel() basically checks that everything is installed as expected.</description>
    </item>
    
    <item>
      <title>Creating a New ggplot theme</title>
      <link>https://pchhina.github.io/portfolioSite/post/creating_theme/</link>
      <pubDate>Thu, 08 Feb 2018 19:32:52 -0600</pubDate>
      
      <guid>https://pchhina.github.io/portfolioSite/post/creating_theme/</guid>
      <description>Introduction This post introduces simple steps on how to create your own ggplot2 theme. Of course, it will not go into details of changing all the aspects. Instead, it will highlight the process using few useful elements.
Theme is basically a set of pre-defined(default) values for elements that make up a plot in ggplot2 library. Major elements are:
 Plot, the outermost area used by a plot. Think of this as let&amp;rsquo;s say your A4 sheet on which you want to draw a plot.</description>
    </item>
    
    <item>
      <title>Exercise Quality Prediction using Machine Learning</title>
      <link>https://pchhina.github.io/portfolioSite/post/exercise/</link>
      <pubDate>Sat, 30 Dec 2017 05:04:40 -0600</pubDate>
      
      <guid>https://pchhina.github.io/portfolioSite/post/exercise/</guid>
      <description>Introduction Many devices exists today in the market (such as Jawbone Up, Nike FuelBand, and Fitbit) inexpensively record, track and analyze data on personal physical activity. Although by using these devices, quantiy of the physical activity is often monitored, quality is rarely quantified. In this project, our goal is be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants in an attempt to predict whether the activity is performed correcly or not.</description>
    </item>
    
    <item>
      <title>Economic and Health Impact of Severe Weather Events</title>
      <link>https://pchhina.github.io/portfolioSite/post/stormdata/</link>
      <pubDate>Thu, 28 Dec 2017 19:32:52 -0600</pubDate>
      
      <guid>https://pchhina.github.io/portfolioSite/post/stormdata/</guid>
      <description>Synopsis This post aims to explore the NOAA Storm Database and answer some basic questions about severe weather events focusing on their economic and health impact. The U.S. National Oceanic and Atmospheric Administration&amp;rsquo;s (NOAA) storm database tracks characteristics of major storms and weather events in the United States, including when and where they occur, as well as estimates of any fatalities, injuries, and property damage. The events in the database start in the year 1950 and end in November 2011.</description>
    </item>
    
  </channel>
</rss>